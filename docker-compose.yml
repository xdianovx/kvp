version: '3.3'

services:
  client:
    container_name: client
    build:
      dockerfile: Dockerfile
      context: ./client

    ports:
      - 3000:3000
    restart: always
    networks:
      - appnet
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next

  server:
    container_name: server
    ports:
      - 8000:8000
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - NODE_ENV
    volumes:
      - ./api:/usr/src/api
      # - ./api/node_modules:/usr/src/api/node_modules
      # - ./api/dist:/usr/src/api/dist
    restart: always
    links:
      - postgres

    depends_on:
      - postgres
    networks:
      - appnet

  postgres:
    container_name: postgres

    hostname: ${DB_HOST}
    image: postgres
    env_file:
      - ./api/.env
    ports:
      - 5432:5432
    environment:
      PGDATA: /var/lib/postgresql/data/
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - appnet
  nginx:
    container_name: nginx
    build:
      dockerfile: Dockerfile
      context: ./nginx
    restart: always

    ports:
      - 80:80
    networks:
      - appnet

networks:
  appnet:
    driver: bridge
